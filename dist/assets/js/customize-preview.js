!function(e){var t={};function n(o){if(t[o])return t[o].exports;var r=t[o]={i:o,l:!1,exports:{}};return e[o].call(r.exports,r,r.exports,n),r.l=!0,r.exports}n.m=e,n.c=t,n.d=function(e,t,o){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:o})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(n.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)n.d(o,r,function(t){return e[t]}.bind(null,r));return o},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=8)}({0:function(e,t){e.exports=jQuery},8:function(e,t,n){e.exports=n(9)},9:function(e,t,n){"use strict";n.r(t);var o=n(0),r=n.n(o);wp.customize("_themename_primary_color",e=>{e.bind(e=>{r()("#_themename-stylesheet-inline-css").html(`\n\t\t\t    :root {\n                    --clr-primary: ${e};\n                }\n        \t`)})}),wp.customize("_themename_site_info",e=>{e.bind(e=>{r()("#footer-info").html(e)})}),wp.customize("_themename_display_author_info",e=>{e.bind(e=>{e?r()("#author-info").show():r()("#author-info").hide()})}),wp.customize("_themename_display_breadcrumb",e=>{e.bind(e=>{e?r()("#breadcrumb").show():r()("#breadcrumb").hide()})}),wp.customize("_themename_display_related_posts",e=>{e.bind(e=>{e?r()("#related-posts").show():r()("#related-posts").hide()})}),wp.customize("_themename_display_post_navigation",e=>{e.bind(e=>{e?r()(".post-navigation").show():r()(".post-navigation").hide()})}),wp.customize("_themename_display_post_share",e=>{e.bind(e=>{e?r()("#post-share").show():r()("#post-share").hide()})})}});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,